[mod-description]
aai-programmable-structures=インストール済みの他のmodに基づくスキャン及び制御構造を追加します。地表を構成する各タイルの内容をスキャンできるタイルスキャナを標準で含みます。AAI Programmable Vehicles modと組み合わせることで 車両及び車両のデータをスキャンし制御できます。

[aai-structure-settings]
structure_settings=__1__
save=OK
output-filtering=出力フィルタ
tick_limit=Tick周期
tick_limit-tooltip=処理をする周期。 X　tick毎に処理します。60tick=1秒です。0は出力をオフにします。この数値を大きくすると処理は若干軽くなりますが、この構造物の数を減らすほうが効果あります。
output_pulse=パルスとして出力
output_pulse-tooltip=チェックされていると、1tickの間だけシグナルを出力し次にスキャンするtick(Tick周期にて設定)まで値はクリアされます。チェックされていない場合は次のスキャンまでシグナルが維持されます。
quantity=数量
quantity-tooltip=指定種別の数量を示すシグナル。 通常、指定した地表における指定した種別（ゾーンなど）の総量を示します。
surface=地表
surface-tooltip=ゲーム内の地表を表すID。 各地表は独立した世界です。
unit_id=ユニットID
unit_id-tooltip=各ユニットに固有のID。 不変かつ地表と独立しています。
type_id=種別ID
type_id-tooltip=種別のIDシグナル。 その地表に生存している、その種別のn番目のユニットであることを示します。もしくは、全地表に対し固有となるプレイヤーIDを示します。
xy_tile=タイル座標
xy_tile-tooltip=タイルのX座標、Y座標
xy_subtile=サブタイル座標
xy_subtile-tooltip=高分解能なタイルX座標、Y座標
physical=物理的性質
physical-tooltip=方角、速度
stat=ユニット状態
stat-tooltip=耐久力、エネルギー、充電率
timer=時計
timer-tooltip=最後の以下からの経過時間: 別タイルへの移動、移動対象物の設定、命令受領
inventory_space=インベントリ空き容量
inventory_space-tooltip=インベントリの空きスロット数
inventory=インベントリ
inventory-tooltip=インベントリ、燃料、弾薬それぞれの内容
zone=現在のゾーン
zone-tooltip=現在のゾーンの種類、ID
terrain=地形
terrain-tooltip=地面、水面、舗装
resource=資源
resource-tooltip=鉱石、木、流体
entity=エンティティ
entity-tooltip=敵、構造物、ユニット、崖、地上のアイテム
unitdata=ユニットデータ
unitdata-tooltip=車両に設定したシグナル（ユニットデータ）は運搬車と車両とがインベントリ内のアイテムを送受する際に使われます。また、ユニットの区別や役割の目印等にも使用可能です。
path_id=経路ID
path_id-tooltip=スキャンした経路のID。経路シグナルとして出力します。経路IDは地表毎に設定されます。
path_quantity=経路の数量
path_quantity-tooltip=自勢力によって定義された、この地表における経路の数。経路数シグナルとして出力します。
waypoint_id=経由地ID
waypoint_id-tooltip=スキャンした経由地のID。 経由地シグナルとして出力します。
waypoint_quantity=経由地の数量
waypoint_quantity-tooltip=スキャンした経路に含まれる経由地の数。経由地数シグナルとして出力します。
target=目標
target-tooltip=経由地として設定した目標があれば, それのIDを示します。示せるIDは、位置ビーコン、車両用倉庫、プレイヤー、ユニットです。
misc=その他
misc-tooltip=その他のデータ。

[recipe-name]
tile-scan=タイルスキャナ
zone-scan=ゾーンスキャナ
zone-control=ゾーンコントローラ
unit-scan=プレイヤースキャナ
unit-control=ユニットコントローラ
unitdata-scan=ユニットデータスキャナ
unitdata-control=ユニットデータコントローラ
path-scan=経路スキャナ
path-control=経路コントローラ

[item-name]
tile-scan=タイルスキャナ
zone-scan=ゾーンスキャナ
zone-control=ゾーンコントローラ
unit-scan=プレイヤースキャナ
unit-control=ユニットコントローラ
unitdata-scan=ユニットデータスキャナ
unitdata-control=ユニットデータコントローラ
path-scan=経路スキャナ
path-control=経路コントローラ

[item-description]
tile-scan=距離シグナルを入力すると、指定した距離以内のランダムなタイルをスキャンします。タイルのXY座標シグナルを入力すると指定のタイルをスキャンします。距離シグナルとタイルのXY座標シグナルを入力すると指定した座標から指定した距離以内にあるランダムなタイルをスキャンします。 スキャンしたタイルの座標と、もしあれば敵、資源、構造物、ユニット、車両、地形の情報を出力します。
zone-scan=スキャンするゾーンの種類を表すゾーンシグナルを入力します。ゾーンの数値により何番目のゾーンをスキャンするか指定します。負の数値を指定すると逆順となります。 指定したゾーンの座標を出力します。
zone-control=タイルのXY座標のみを入力すると指定座標のゾーンを消去します。タイルのXY座標とゾーンシグナルを同時に入力すると、指定した位置に指定したゾーンを設置します。
unit-scan=シグナルの信号タブにあるプレイヤーIDシグナルを入力すると、n番目のプレイヤーを選択します。負の値を入力すると逆順に選択します。 プレイヤーの選択に成功した場合、プレイヤーの位置、耐久力、インベントリといった詳細を出力します。
unit-control=車両IDと車両への指示を入力します。 直接の指示として方角と速度、または位置のオフセットとしてサブタイルのXY座標を指定できます。サブタイルを指定すると、自車座標を(0,0)としたときの(SubX,SubY)が位置する方角と速度に変換され直線的に向かいます。間接的な指示として、タイルのXY座標を指定できます。この場合はバイターの（あまり賢くない）経路探索AIを用いて指定した座標に向かいます。
unitdata-scan=シグナルの信号タブにある車両IDまたはプレイヤーIDを入力すると、n番目に設置したその種類の車両・プレイヤーを選択します。負の値を入力すると逆順に選択します。 選択した車両にセットされたユニットデータを出力します。ユニットデータは運搬車とアイテムを送受する際のインベントリ目標値として使われます。また、ユニットの区別や役割の目印等にも使用可能です。
unitdata-control=シグナルの信号タブにある車両IDシグナルと、車両にセットしたいユニットデータシグナルを入力します。 入力した信号は、車両にセットされていたすべてのユニットデータ信号を上書きします。既存のユニットデータに追加したい場合は、まず車両のユニットデータをスキャンし、それに変更を加え、その後車両にユニットデータをセットする必要があります。
path-scan=経路IDを入力すると経由地の数を取得します。経路IDと経由地IDを入力すると指定した経由地の情報を出力します。 経由地が座標の場合はXY座標を、それ以外の場合は目標のIDを出力します。
path-control=経路IDと経由地IDのみを入力すると経由地を削除します。他のシグナルも入力すると指定したものを経由地としてセットします。 XY座標を入力した場合は指定座標を経由地として、プレイヤーIDやユニットID、位置ビーコンID、車両用倉庫IDを指定した場合はそれらを目標としてセットします。

[entity-name]
struct-generic-input=シグナル入力端子
struct-generic-output=シグナル出力端子
struct-generic-scanner-settings=スキャナ設定
struct-generic-controller-settings=コントローラ設定

tile-scan=タイルスキャナ
zone-scan=ゾーンスキャナ
zone-control=ゾーンコントローラ
unit-scan=プレイヤースキャナ
unit-control=ユニットコントローラ
unitdata-scan=ユニットデータスキャナ
unitdata-control=ユニットデータコントローラ
path-scan=経路スキャナ
path-control=経路コントローラ

[entity-description]
tile-scan=距離シグナルを入力すると、指定した距離以内のランダムなタイルをスキャンします。タイルのXY座標シグナルを入力すると指定のタイルをスキャンします。距離シグナルとタイルのXY座標シグナルを入力すると指定した座標から指定した距離以内にあるランダムなタイルをスキャンします。 スキャンしたタイルの座標と、もしあれば敵、資源、構造物、ユニット、車両、地形の情報を出力します。
zone-scan=スキャンするゾーンの種類を表すゾーンシグナルを入力します。ゾーンの数値により何番目のゾーンをスキャンするか指定します。負の数値を指定すると逆順となります。 指定したゾーンの座標を出力します。
zone-control=タイルのXY座標のみを入力すると指定座標のゾーンを消去します。タイルのXY座標とゾーンシグナルを同時に入力すると、指定した位置に指定したゾーンを設置します。
unit-scan=シグナルの信号タブにあるプレイヤーIDシグナルを入力すると、n番目のプレイヤーを選択します。負の値を入力すると逆順に選択します。 プレイヤーの選択に成功した場合、プレイヤーの位置、耐久力、インベントリといった詳細を出力します。
unit-control=車両IDと車両への指示を入力します。 直接の指示として方角と速度、または位置のオフセットとしてサブタイルのXY座標を指定できます。サブタイルを指定すると、自車座標を(0,0)としたときの(SubX,SubY)が位置する方角と速度に変換され直線的に向かいます。間接的な指示として、タイルのXY座標を指定できます。この場合はバイターの（あまり賢くない）経路探索AIを用いて指定した座標に向かいます。
unitdata-scan=シグナルの信号タブにある車両IDまたはプレイヤーIDを入力すると、n番目に設置したその種類の車両・プレイヤーを選択します。負の値を入力すると逆順に選択します。 選択した車両にセットされたユニットデータを出力します。ユニットデータは運搬車とアイテムを送受する際のインベントリ目標値として使われます。また、ユニットの区別や役割の目印等にも使用可能です。
unitdata-control=シグナルの信号タブにある車両IDシグナルと、車両にセットしたいユニットデータシグナルを入力します。 入力した信号は、車両にセットされていたすべてのユニットデータ信号を上書きします。既存のユニットデータに追加したい場合は、まず車両のユニットデータをスキャンし、それに変更を加え、その後車両にユニットデータをセットする必要があります。
path-scan=経路IDを入力すると経由地の数を取得します。経路IDと経由地IDを入力すると指定した経由地の情報を出力します。 経由地が座標の場合はXY座標を、それ以外の場合は目標のIDを出力します。
path-control=経路IDと経由地IDのみを入力すると経由地を削除します。他のシグナルも入力すると指定したものを経由地としてセットします。 XY座標を入力した場合は指定座標を経由地として、プレイヤーIDやユニットID、位置ビーコンID、車両用倉庫IDを指定した場合はそれらを目標としてセットします。

[technology-name]
programmable-structures=プログラム可能な構造物

[technology-description]
programmable-structures=各タイルをスキャンし資源や敵、構造物を探知します。指定の座標に自動でゾーンを設置します。ゾーンの位置をスキャンします。プレイヤーの座標や耐久力、インベントリをスキャンします。

[mod-setting-name]
aai-max-structs-per-tick=Tick毎最大AAI構造物動作数
aai-structs-tick_limit=AAI初期Tickレート
aai-structs-output_pulse=AAI初期パルス出力

[mod-setting-description]
aai-max-structs-per-tick=各フレームにおいて動作する構造物の数を限定することでUPSを改善します。大きな値にするとよりUPSにとって厳しくなる恐れがあります。0にすると無制限となります。0を設定する場合は構造物を別の手段により制限することも有効かもしれません。例えば不要時は構造物への電力供給を停止する、または常時信号を送るかわりにパルスで送る、などです。
aai-structs-tick_limit=設置する構造物のTickレート初期値を設定します。
aai-structs-output_pulse=設置する構造物のパルス出力がデフォルトで有効になります。
